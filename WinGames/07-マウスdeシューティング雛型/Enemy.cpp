//
//	エネミー
//

#include	"main.h"

//--- 定数定義 ---------------------------------------------------------
#define START_DIST			13.f					// 開始位置
#define SPEED_GET()			FRAND2(0.005f, 0.010f)	// 速度

//--- 変数定義 ---------------------------------------------------------
cEnemy	*enemy[ENEMY_MAX];					// エネミーワーク

/*----------------------------------------------------------------------
| <<< メイン >>>
*---------------------------------------------------------------------*/
void	cEnemy::Main(void)
{
	//--- 移動 -------------------------------------------------------
	m_fDist -= m_fSpeed;

	//--- 現在地を計算 -------------------------------------------------
	m_vecPos.x = sinf(m_fRot) * (m_fDist);
	m_vecPos.z = cosf(m_fRot) * (m_fDist);
	m_vecPos.y = 0;
}

/*---------------------------------------------------------------------*
| <<< 描画 >>>
*---------------------------------------------------------------------*/
void	cEnemy::Draw(void)
{
	// プレイヤーの方向を求める（プレイヤーは画面中央にいるものとする）
	float	r = atan2f(m_vecPos.x, m_vecPos.z);

	// 描画
	MTX		mtxWorld, mtxTrans, mtxRot;

	D3DXMatrixTranslation(&mtxTrans, &m_vecPos);// 平行移動
	D3DXMatrixRotationY(	&mtxRot,	r);		// Y回転
	mtxWorld = mtxRot * mtxTrans;				// 行列の掛け合わせ
	d3_3d_draw(X_ENE00 + m_iType, &mtxWorld);	// 描画
}

//--- 以下、一括管理用 ------------------------------------------------

/*-------------------------------------------------------------------*
| <<< エネミー初期化 >>>
*-------------------------------------------------------------------*/
void	EnemyInit(void)
{
	for(int i = 0; i < ENEMY_MAX; i++)
	{
		//メモリを確保しているものは以降の処理をしない
		if(enemy[i] == NULL)
		{
			// メモリを確保(enemy[i] が NULL(0) → メモリのどこかの値になる(0ではない値になる))
			enemy[i] = new cEnemy;
		}
		enemy[i]->m_bUse = FALSE;
	}
}

/*-------------------------------------------------------------------*
| <<< エネミーメイン >>>
*-------------------------------------------------------------------*/
void	EnemyMain(void)
{
	//--- 起動 ---------------------------------------------
	BOOL	bStart = FALSE;

	// キークリックで起動
	if(pad.bKeyRep[KEY_SPACE])
	{
		bStart = TRUE;
	}

	// 起動処理
	if(bStart)
	{
		// エネミーの空きを見つけて登録する
		for(int i = 0; i < ENEMY_MAX; i++)
		{
			cEnemy	*e = enemy[i];
			if(e->m_bUse){	continue;}

			// 登録
			e->m_bUse		= TRUE;					// 使用フラグ
			e->m_bDead		= FALSE;				// 死亡フラグ
			e->m_iType		= RAND(ENEMY_KIND);		// 種類
			e->m_fSpeed		= SPEED_GET();			// 速度
			e->m_fRot		= FRAND(360);			// 回転値
			e->m_fDist		= START_DIST;			// 距離
			break;
		}
	}

	//--- エネミー動かす --------------------------------------------------
