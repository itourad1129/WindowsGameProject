


#include		"main.h"

//--- 変数 ----------------------------
cPlayer	*player;



/*-----------------------------------------------------------------------*
|	<<< 描画 >>>
*------------------------------------------------------------------------*/
void		cPlayer::Draw(void)
{
	// 3D描画 
	MTX		mtxWorld, mtxTrans;

	D3DXMatrixTranslation(&mtxTrans, &m_vecPos);
	mtxWorld = mtxTrans;						// 行列の掛け合わせ
	d3_3d_draw(X_PLAYER,  &mtxWorld);			// 描画
}

//--- 以下、外部からの呼び出し関数 ---------------

/*-----------------------------------------------------------------------*
| <<< プレイヤー初期化 >>>
*-----------------------------------------------------------------------*/
void		PlayerInit(void)
{
	// メモリ確保
	if(player == NULL)					// メモリを確保しているかチェック
	{
		player = new cPlayer;
	}
	// 変数初期化
	player->m_vecPos = VEC3(0, 0, 0);
}

/*-----------------------------------------------------------------------*
| <<< プレイヤーメイン >>>
*-----------------------------------------------------------------------*/
void	PlayerMain(void)
{
}
/*-----------------------------------------------------------------------*
| <<< プレイヤー描画 >>>
*-----------------------------------------------------------------------*/
void		PlayerDraw(void)
{
	player->Draw();
}

/*----------------------------------------------------------------------*
| <<< メイン >>>
*-----------------------------------------------------------------------*/
void	cPlayer::Main(void)
{
	//--- マウスの2D位置から3D位置と角度を求める ----------------------
	// 向きを求める
	m_fDir		= atan2f((float)pad.sX - __SCR_W / 2.f, (float)pad.sY - __SCR_H / 2.f);
}

void	PlayerMain(void)
{
	player->Main();
}
void	cPlayer::Draw(void)
{
	// 3D描画
	MTX		mtxWorld, mtxTrans, mtxRot;

	D3DXMatrixRotationY(	&mtxRot,	-m_fDir);	//Y回転
	mtxWorld = mtxRot * mtxTrans;					//行列の掛け合わせ
	
	d3_3d_draw(X_PLAYER, &mtxWorld);				// 描画
}