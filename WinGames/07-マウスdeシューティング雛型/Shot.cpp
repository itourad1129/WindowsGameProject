//
//	プレイヤー弾
//

#include	"main.h"

//--- 定数 ------------------------------------------------------------------------------------------
#define SHOT_DIST	10			// 弾が進むことのできる距離
#define SHOT_SPEED	0.1f		// 弾の速度

//--- 変数 ------------------------------------------------------------------------------------------
cShot	*shot[SHOT_MAX];		// 弾ワーク

/*----------------------------------------------------------------------------------*
| <<< メイン >>>
*-----------------------------------------------------------------------------------*/
void	cShot::Main(void)
{

	//--- 移動 ----------------------------------------------------------
	m_vecPos.x += sinf(m_fDir) * m_fSpeed;	// 0.1fは移動する速度を指す
	m_vecPos.z -= cosf(m_fDir) * m_fSpeed;

	// 終了チェック
	m_f(Dist += m_fSpeed;					// 弾を進める
	if(m_fDist >= SHOT_DIST)
	{
		m_bUse = FALSE;
		return;
	}
}

/*---------------------------------------------------------------------------------*
| <<< 描画 >>>
*----------------------------------------------------------------------------------*/
void	cShot::Draw(void)
{
	// 3D 描画
	MTX		mtxTrans;
	D3DXMatrixTranslation(&mtxTrans, &m_vecPos);
	d3_3d_draw(X_SHOT, &mtxTrans);
}

//--- 以下、一括処理 ---------------------------------------------------------------
/*-------------------------------------------------------------------------*
| <<< 弾初期化 >>>
*-------------------------------------------------------------------------*/
void	ShotInit(void)
{
	for(int i = 0; i < SHOT_MAX; i++)
	{
		// メモリを確保していたら NULL 以外になります)
		if(shot[i] == NULL){ shot[i] = new cShot;}

		// 使用フラグのみ設定しておく
		shot[i]->m_bUse = FALSE;
	}
}
/*---------------------------------------------------------------------*
| <<< 弾メイン >>>
*--------------------------------------------------------------------*/
void	ShotMain(void)
{
	for(int i = 0; i < SHOT_MAX; i++)
	{
		cShot	*s = shot[i];

		// 使用中のもののみ処理
		if(s->m_bUse){ s->Main();}
	}
}

/*--------------------------------------------------------------------*
| <<< 弾描画 >>>
*--------------------------------------------------------------------*/
void	ShotDraw(void)
{
	for(int i = 0; i < SHOT_MAX; i++)
	{
		cShot	*s = shot[i];

		// 使用中のもののみ描画
		if(s->m_bUse){ s->Draw();}
	}
}

/*--------------------------------------------------------------------*
| <<< 弾発射 >>>
|	入力	vecPos = 発射位置
|			fDir   = 発射角（ラジアン）
*-------------------------------------------------------------------*/
void	ShotStart(VEC3	*pvecPos,	float	fDir)
{
	for(int	i = 0; i < SHOT_MAX;	i++)
	{
		cShot	*s = shot[i];

		// 使用チェック
		if(s->m_bUse){ continue;}

		// いろいろと設定する
		s->m_bUse	= TRUE;				// 起動
		s->m_fDir	= fDir;				// 向き
		s->m_fSpeed = SHOT_SPEED;		// 速度
		s->m_vecPos = *pvecPos;			// 弾の一をプレイヤーと同じにする
		s->m_fDist	= 0;				// 距離
		snd_play(SND_SHOT);				// 弾発射音
		break;
	}
}