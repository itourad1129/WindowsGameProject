//
//	アルファソート(半透明ポリゴンを登録してソートして描画)
//

#ifndef	__ASORT_H

#define	__ASORT_H


#define	ASORT_POLY_MAX		20000			// 管理できるポリゴン数

#define	ASORT_DIV_			8				// メッシュ使用時の分割数(8 x 8 = 64 個登録可)
#define	ASORT_DEFAULT_SIZE	1024			// デフォルトのオフスクリーンサイズ
#define	ASORT_BUF_MAX_		20000			// アルファソート用のバッファサイズ



/*------------------------------------------------------------------------------*
| <<< アルファソート用オフスクリーンの横幅を得る >>>
|	戻り値	横幅
*------------------------------------------------------------------------------*/
extern	int		asort_render_width_get(void);

/*------------------------------------------------------------------------------*
| <<< アルファソート用オフスクリーンの縦幅を得る >>>
|	戻り値	縦幅
*------------------------------------------------------------------------------*/
extern	int		asort_render_height_get(void);

/*------------------------------------------------------------------------------*
| <<< 登録ポリゴンをクリア >>>
*------------------------------------------------------------------------------*/
extern	void	asort_clear(void);

/*------------------------------------------------------------------------------*
| <<< ポリゴン登録 >>>
|	入力	pvtx = 三角形の頂点
*------------------------------------------------------------------------------*/
extern	void	asort_set(D3_VTX_LX *pvtx);

/*------------------------------------------------------------------------------*
| <<< 登録ポリゴンをソート >>>
*------------------------------------------------------------------------------*/
extern	void	asort_sort(void);

/*------------------------------------------------------------------------------*
| <<< 登録ポリゴンを描画 >>>
*------------------------------------------------------------------------------*/
extern	void	asort_draw(void);

/*------------------------------------------------------------------------------*
| <<< asort ライブラリィを開放 >>>
*------------------------------------------------------------------------------*/
extern	void	asort_free(void);

/*------------------------------------------------------------------------------*
| <<< asort 用にメッシュ読み込み >>>
|	入力	iMesh = メッシュ番号
|	戻り値	FALSE : 読み込み失敗
*------------------------------------------------------------------------------*/
extern	BOOL	asort_mesh_load(int iMesh);

/*------------------------------------------------------------------------------*
| <<< asort メッシュ解放 >>>
|	入力	iMesh = メッシュ番号
*------------------------------------------------------------------------------*/
extern	void	asort_mesh_free(int iMesh);
extern	void	asort_mesh_free(void);

/*------------------------------------------------------------------------------*
| <<< asort 用に読み込んだメッシュ描画 >>>
|	入力	iMesh      = メッシュ番号
|			*pmtxWorld = ワールド行列
*------------------------------------------------------------------------------*/
extern	void	asort_mesh_draw(int iMesh, MTX *pmtxWorld);

/*------------------------------------------------------------------------------*
| <<< asort 用にメッシュ読み込み >>>
|	入力	iMesh      = メッシュ番号
|			*pmtxWorld = ワールド行列
*------------------------------------------------------------------------------*/
extern	void	asort_mesh_set(int iMesh, MTX *pmtxWorld);

/*------------------------------------------------------------------------------*
| <<< アルファソート初期化 >>>
|	入力	iTex   = アルファソートで使用するテクスチャー番号
|			iW, iH = オフスクリーンサイズ
*------------------------------------------------------------------------------*/
extern	void	asort_init(int iTex, int iW = d3.caps.MaxTextureWidth, int iH = d3.caps.MaxTextureHeight);



extern	void	asort_buf_set(void);
extern	void	asort_buf_draw(void);



#endif					// end _asort.h

